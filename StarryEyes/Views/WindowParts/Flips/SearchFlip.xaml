<UserControl x:Class="StarryEyes.Views.WindowParts.Flips.SearchFlip"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviors="clr-namespace:StarryEyes.Views.Messaging.Behaviors"
             xmlns:controls="clr-namespace:StarryEyes.Views.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
             xmlns:localize="clr-namespace:StarryEyes.Globalization.WindowParts"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:searchFlips="clr-namespace:StarryEyes.Views.WindowParts.Flips.SearchFlips"
             xmlns:triggers="clr-namespace:StarryEyes.Views.Triggers"
             xmlns:utils="clr-namespace:StarryEyes.Views.Utils"
             xmlns:vm="clr-namespace:StarryEyes.ViewModels.WindowParts.Flips"
             x:Name="SearchFlipRoot"
             Visibility="Collapsed"
             d:DataContext="{d:DesignInstance vm:SearchFlipViewModel}"
             d:DesignHeight="800"
             d:DesignWidth="1200"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <utils:BooleanToInvisibleConverter x:Key="BooleanToInvisibleConverter" />
            <utils:BooleanToVisibleConverter x:Key="BooleanToVisibleConverter" />
            <utils:NotNullToVisibleConverter x:Key="NotNullToVisibleConverter" />
            <Style x:Key="FlatFloatButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FontFamily" Value="{x:Static SystemFonts.MessageFontFamily}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="OuterBorder" Background="Black">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                    <SplineColorKeyFrame KeyTime="0:0:0" Value="{DynamicResource SearchFlipHoveringBackground}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Presenter" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                    <SplineColorKeyFrame KeyTime="0:0:0" Value="{DynamicResource SearchFlipHoveringForeground}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                    <SplineColorKeyFrame KeyTime="0:0:0" Value="{DynamicResource SearchFlipPressedBackground}" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Presenter" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                    <SplineColorKeyFrame KeyTime="0:0:0" Value="{DynamicResource SearchFlipPressedForeground}" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                                    <SplineColorKeyFrame KeyTime="0:0:0" Value="#00000000" />
                                                </ColorAnimationUsingKeyFrames>
                                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Presenter" Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)">
                                                    <SplineColorKeyFrame KeyTime="0:0:0" Value="White" />
                                                </ColorAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ValidationStates">
                                        <VisualState x:Name="InvalidFocused" />
                                        <VisualState x:Name="InvalidUnfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="Presenter"
                                                  Width="Auto"
                                                  Height="Auto"
                                                  Margin="8"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  TextBlock.FontSize="12"
                                                  TextBlock.Foreground="Black" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <triggers:KeyAssignTrigger Group="Timeline" />
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}">
            <behaviors:GoToStateInteractionMessageAction />
            <behaviors:TaskDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>
    <Grid x:Name="OuterGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStates">
                <VisualState x:Name="Open">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchFlipRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.6">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InnerGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InnerGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="100" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Close">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchFlipRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InnerGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="100">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InnerGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="SearchOptionVisualStates">
                <VisualState x:Name="OpenSearchOption">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SearchOptionPanel" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchOptionPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CloseSearchOption">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SearchOptionPanel" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SearchOptionPanel" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="SearchResultVisualStates">
                <VisualState x:Name="ResultAvailable">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResultGrid" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ResultGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ResultGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                            <EasingDoubleKeyFrame KeyTime="0" Value="100" />
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="ResultUnavailable">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ResultGrid" Storyboard.TargetProperty="(UIElement.Visibility)">
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ResultGrid" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="100">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ResultGrid" Storyboard.TargetProperty="(UIElement.Opacity)">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0">
                                <EasingDoubleKeyFrame.EasingFunction>
                                    <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                </EasingDoubleKeyFrame.EasingFunction>
                            </EasingDoubleKeyFrame>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Border x:Name="Border"
                Grid.ColumnSpan="2"
                Background="#FF111111"
                BorderThickness="0"
                Opacity="0.6">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <ei:CallMethodAction MethodName="Close" TargetObject="{Binding}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </Border>

        <!--  Search results  -->
        <Grid x:Name="ResultGrid"
              Grid.Column="0"
              Background="{DynamicResource BaseColorBackgroundBrush}"
              SizeChanged="ResultGrid_OnSizeChanged               "
              Visibility="Collapsed">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Grid.RenderTransform>
            <i:Interaction.Triggers>
                <ei:DataTrigger Binding="{Binding IsSearchResultAvailable}" Value="True">
                    <ei:GoToStateAction StateName="ResultAvailable" />
                </ei:DataTrigger>
                <ei:DataTrigger Binding="{Binding IsSearchResultAvailable}" Value="False">
                    <ei:GoToStateAction StateName="ResultUnavailable" />
                </ei:DataTrigger>
            </i:Interaction.Triggers>
            <DockPanel Visibility="{Binding SearchResult, Converter={StaticResource NotNullToVisibleConverter}}">
                <searchFlips:SearchResult DataContext="{Binding SearchResult}" />
            </DockPanel>
            <DockPanel Visibility="{Binding UserResult, Converter={StaticResource NotNullToVisibleConverter}}">
                <searchFlips:UserResult DataContext="{Binding UserResult}" />
            </DockPanel>
            <Grid Visibility="{Binding UserInfo, Converter={StaticResource NotNullToVisibleConverter}}">
                <searchFlips:UserInfo DataContext="{Binding UserInfo}" />
            </Grid>
        </Grid>

        <!--  Search navigations  -->
        <Grid x:Name="InnerGrid"
              Grid.Column="1"
              Width="286"
              HorizontalAlignment="Right"
              Background="{DynamicResource SearchFlipBackgroundBrush}"
              RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Grid.RenderTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <!--  Search Candidates  -->
            <Border Grid.RowSpan="2" VerticalAlignment="Stretch">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Background" Value="{DynamicResource SearchFlipBackgroundBrush}" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsQueryMode}" Value="True" />
                                    <Condition Binding="{Binding HasError}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="{DynamicResource SearchFlipQueryInvalidBackgroundBrush}" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <TextBlock Grid.Row="1"
                       Margin="8"
                       Foreground="{DynamicResource SearchFlipForegroundBrush}"
                       Text="{x:Static localize:SearchFlipResources.SearchFlipQueryHelp}"
                       TextWrapping="Wrap"
                       Visibility="{Binding IsQueryMode,
                                            Converter={StaticResource BooleanToInvisibleConverter}}" />
            <Grid Grid.Row="1" Visibility="{Binding IsQueryMode, Converter={StaticResource BooleanToVisibleConverter}}">
                <TextBlock Margin="8"
                           Foreground="{DynamicResource SearchFlipForegroundBrush}"
                           Text="{x:Static localize:SearchFlipResources.SearchFlipQueryValid}"
                           TextWrapping="Wrap"
                           Visibility="{Binding HasError,
                                                Converter={StaticResource BooleanToInvisibleConverter}}" />
                <TextBlock Margin="8"
                           Foreground="{DynamicResource SearchFlipQueryInvalidForegroundBrush}"
                           TextWrapping="Wrap"
                           Visibility="{Binding HasError,
                                                Converter={StaticResource BooleanToVisibleConverter}}">
                    <Run Text="{x:Static localize:SearchFlipResources.SearchFlipQueryInvalid}" />
                    <Run Text="{Binding ErrorText, Mode=OneWay}" />
                </TextBlock>
            </Grid>
            <StackPanel x:Name="SearchOptionPanel"
                        Grid.Row="2"
                        Orientation="Vertical"
                        Visibility="Collapsed">
                <i:Interaction.Triggers>
                    <ei:DataTrigger Binding="{Binding IsSearchOptionAvailable}" Value="True">
                        <ei:GoToStateAction StateName="OpenSearchOption" />
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding IsSearchOptionAvailable}" Value="False">
                        <ei:GoToStateAction StateName="CloseSearchOption" />
                    </ei:DataTrigger>
                </i:Interaction.Triggers>
                <StackPanel.LayoutTransform>
                    <TransformGroup>
                        <ScaleTransform />
                        <SkewTransform />
                        <RotateTransform />
                        <TranslateTransform />
                    </TransformGroup>
                </StackPanel.LayoutTransform>
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Background" Value="Transparent" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SearchMode}" Value="CurrentTab">
                                    <Setter Property="Background" Value="{DynamicResource SearchFlipHoveringBackgroundBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Button Content="{x:Static localize:SearchFlipResources.SearchFlipSearchTab}"
                            Focusable="False"
                            Style="{StaticResource FlatFloatButtonStyle}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="SetLocalTabSearch" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.ToolTip>
                            <TextBlock Margin="4" Text="{x:Static localize:SearchFlipResources.SearchFlipSearchTabDesc}" />
                        </Button.ToolTip>
                    </Button>
                </Grid>
                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Background" Value="Transparent" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SearchMode}" Value="Local">
                                    <Setter Property="Background" Value="{DynamicResource SearchFlipHoveringBackgroundBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Button Content="{x:Static localize:SearchFlipResources.SearchFlipSearchLocal}"
                            Focusable="False"
                            Style="{StaticResource FlatFloatButtonStyle}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="SetLocalSearch" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.ToolTip>
                            <TextBlock Margin="4" Text="{x:Static localize:SearchFlipResources.SearchFlipSearchLocalDesc}" />
                        </Button.ToolTip>
                    </Button>
                </Grid>

                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Background" Value="Transparent" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SearchMode}" Value="Web">
                                    <Setter Property="Background" Value="{DynamicResource SearchFlipHoveringBackgroundBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Button Content="{x:Static localize:SearchFlipResources.SearchFlipSearchTwitter}"
                            Focusable="False"
                            Style="{StaticResource FlatFloatButtonStyle}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="SetWebSearch" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.ToolTip>
                            <TextBlock Margin="4" Text="{x:Static localize:SearchFlipResources.SearchFlipSearchTwitterDesc}" />
                        </Button.ToolTip>
                    </Button>
                </Grid>

                <Grid>
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Background" Value="Transparent" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SearchMode}" Value="UserWeb">
                                    <Setter Property="Background" Value="{DynamicResource SearchFlipHoveringBackgroundBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Button Content="{x:Static localize:SearchFlipResources.SearchFlipSearchUser}"
                            Focusable="False"
                            Style="{StaticResource FlatFloatButtonStyle}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="SetUserWebSearch" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.ToolTip>
                            <TextBlock Margin="4" Text="{x:Static localize:SearchFlipResources.SearchFlipSearchUserDesc}" />
                        </Button.ToolTip>
                    </Button>
                </Grid>

                <Grid Visibility="{Binding CanBeUserScreenName, Converter={StaticResource BooleanToVisibleConverter}}">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Setter Property="Background" Value="Transparent" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SearchMode}" Value="UserScreenName">
                                    <Setter Property="Background" Value="{DynamicResource SearchFlipHoveringBackgroundBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <Button Content="{x:Static localize:SearchFlipResources.SearchFlipSearchScreenName}"
                            Focusable="False"
                            Style="{StaticResource FlatFloatButtonStyle}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:CallMethodAction MethodName="SetUserIdSearch" TargetObject="{Binding}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.ToolTip>
                            <TextBlock Margin="4" Text="{x:Static localize:SearchFlipResources.SearchFlipSearchScreenNameDesc}" />
                        </Button.ToolTip>
                    </Button>
                </Grid>

            </StackPanel>
            <TextBlock Grid.Row="3"
                       Margin="8"
                       VerticalAlignment="Bottom"
                       Foreground="{DynamicResource SearchFlipForegroundBrush}"
                       Text="{x:Static localize:SearchFlipResources.SearchFlipSavedKeywordsUnavailable}"
                       TextWrapping="Wrap"
                       Visibility="{Binding SearchCandidate.IsSearchCandidateAvailable,
                                            Converter={StaticResource BooleanToInvisibleConverter}}" />
            <DockPanel Grid.Row="3"
                       Margin="0,8,0,0"
                       Visibility="{Binding SearchCandidate.IsSearchCandidateAvailable,
                                            Converter={StaticResource BooleanToVisibleConverter}}">
                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                    <controls:LazyImage Width="24"
                                        Height="24"
                                        Margin="8,8,4,8"
                                        DecodePixelWidth="24"
                                        RenderOptions.BitmapScalingMode="HighQuality"
                                        UriSource="{Binding SearchCandidate.CurrentUserProfileImage}" />
                    <TextBlock Margin="4,8,8,8"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource SearchFlipForegroundBrush}">
                        <Run Text="{Binding SearchCandidate.CurrentUserScreenName, Mode=OneWay, StringFormat={x:Static localize:SearchFlipResources.SearchFlipSavedKeywordsFormat}}" />
                    </TextBlock>
                </StackPanel>
                <ItemsControl FocusVisualStyle="{x:Null}" ItemsSource="{Binding SearchCandidate.SearchCandidates}">
                    <ItemsControl.Template>
                        <ControlTemplate>
                            <ScrollViewer x:Name="ScrollViewer"
                                          Padding="{TemplateBinding Padding}"
                                          Style="{StaticResource TouchScrollViewerStyle}"
                                          VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </ControlTemplate>
                    </ItemsControl.Template>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Content="{Binding Query}"
                                    Focusable="False"
                                    Style="{StaticResource FlatFloatButtonStyle}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:CallMethodAction MethodName="SelectThis" TargetObject="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Button.ContextMenu>
                                    <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                                    <ContextMenu DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                                        <MenuItem Command="{Binding RemoveCommand}" Header="{x:Static localize:SearchFlipResources.SearchFlipDeleteSavedKeyword}" />
                                    </ContextMenu>
                                </Button.ContextMenu>
                                <Button.ToolTip>
                                    <TextBlock Margin="4" Text="{Binding Query, Mode=OneWay, StringFormat={x:Static localize:SearchFlipResources.SearchFlipSearchBySavedKeywordFormat}}" />
                                </Button.ToolTip>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DockPanel>
        </Grid>
    </Grid>
</UserControl>
