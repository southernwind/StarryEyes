//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace StarryEyes.Globalization.Models {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SettingModelResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SettingModelResources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("StarryEyes.Globalization.Models.SettingModelResources", typeof(SettingModelResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Operation is uncontinuable any more. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackupFailedContent {
            get {
                return ResourceManager.GetString("BackupFailedContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Exit Krile に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackupFailedExit {
            get {
                return ResourceManager.GetString("BackupFailedExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Backup failed due to some reasons. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackupFailedInst {
            get {
                return ResourceManager.GetString("BackupFailedInst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Backup failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BackupFailedTitle {
            get {
                return ResourceManager.GetString("BackupFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Key Assign Error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string KeyAssignError {
            get {
                return ResourceManager.GetString("KeyAssignError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Argument is required in key assign {0}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string KeyAssignErrorArgumentRequiredFormat {
            get {
                return ResourceManager.GetString("KeyAssignErrorArgumentRequiredFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Argument is not supported in key assign {0}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string KeyAssignErrorArgumentUnsupportedFormat {
            get {
                return ResourceManager.GetString("KeyAssignErrorArgumentUnsupportedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Script of the key assignment file have errors: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string KeyAssignErrorContent {
            get {
                return ResourceManager.GetString("KeyAssignErrorContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Could not read key assign file. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string KeyAssignErrorInst {
            get {
                return ResourceManager.GetString("KeyAssignErrorInst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Key assign error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string KeyAssignErrorTitle {
            get {
                return ResourceManager.GetString("KeyAssignErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Key assign profile {0} is not found. Use default. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string KeyAssignProfileNotFoundFormat {
            get {
                return ResourceManager.GetString("KeyAssignProfileNotFoundFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Create backup and initialize setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadFailedCommandBackup {
            get {
                return ResourceManager.GetString("LoadFailedCommandBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Initialize setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadFailedCommandInitialize {
            get {
                return ResourceManager.GetString("LoadFailedCommandInitialize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Since it was in a configuration file about abnormalities, it was not able to read. 
        ///Choose next action. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadFailedContent {
            get {
                return ResourceManager.GetString("LoadFailedContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Exit krile に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadFailedExit {
            get {
                return ResourceManager.GetString("LoadFailedExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Setting is corrupted. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadFailedInst {
            get {
                return ResourceManager.GetString("LoadFailedInst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Krile setting load failed に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LoadFailedTitle {
            get {
                return ResourceManager.GetString("LoadFailedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Theme XML contains some errors: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeErrorContent {
            get {
                return ResourceManager.GetString("ThemeErrorContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   File could not load. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeErrorInst {
            get {
                return ResourceManager.GetString("ThemeErrorInst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Theme error に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeErrorTitle {
            get {
                return ResourceManager.GetString("ThemeErrorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Theme version is incompatible: に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeIncompatibleContent {
            get {
                return ResourceManager.GetString("ThemeIncompatibleContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Get newer version of theme, or change to new format.
        ///(if display this error about default.xml, automatically convert to new format.) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeIncompatibleExInfo {
            get {
                return ResourceManager.GetString("ThemeIncompatibleExInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Theme file could not read. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeIncompatibleInst {
            get {
                return ResourceManager.GetString("ThemeIncompatibleInst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Theme compatibility issue に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ThemeIncompatibleTitle {
            get {
                return ResourceManager.GetString("ThemeIncompatibleTitle", resourceCulture);
            }
        }
    }
}
